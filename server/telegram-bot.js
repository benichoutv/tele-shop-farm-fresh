import 'dotenv/config';
import TelegramBot from 'node-telegram-bot-api';

const token = process.env.TELEGRAM_BOT_TOKEN;
const appUrl = process.env.APP_BASE_URL;

if (!token) {
  console.error('‚ùå TELEGRAM_BOT_TOKEN manquant dans .env');
  process.exit(1);
}

if (!appUrl) {
  console.error('‚ùå APP_BASE_URL manquant dans .env');
  process.exit(1);
}

// Cr√©er le bot en mode polling (√©coute active)
const bot = new TelegramBot(token, { polling: true });

console.log('‚úÖ Bot RS-Liv d√©marr√© avec succ√®s');
console.log(`üì± URL de la mini-app : ${appUrl}`);

// R√©pondre √† la commande /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  const firstName = msg.from.first_name || '';
  
  try {
    await bot.sendMessage(
      chatId,
      `üëã Bonjour ${firstName} ! Bienvenue sur le bot officiel RSliv üî•üçì\n\nüì± Ici, tu trouveras toutes nos infos, Livraison, actus et offres sp√©ciales.\n\n‚è∞ Utilise /start pour afficher notre menu et passer commande facilement.\n\nüè† Merci de faire confiance √† RsLiv ‚Äî Service rapide, discret & s√©curis√©.`,
      {
        reply_markup: {
          inline_keyboard: [[
            {
              text: 'üõí Ouvrir RSliv',
              web_app: { url: appUrl }
            }
          ]]
        }
      }
    );
    console.log(`‚úÖ Commande /start envoy√©e √† ${msg.from.username || chatId}`);
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'envoi du message /start:', error);
  }
});

// R√©pondre aux messages texte (autres que /start)
bot.on('message', async (msg) => {
  // Ignorer les commandes (d√©j√† g√©r√©es par onText)
  if (msg.text && msg.text.startsWith('/')) return;
  
  // Ignorer les m√©dias
  if (!msg.text) return;
  
  const chatId = msg.chat.id;
  
  try {
    await bot.sendMessage(chatId, 'üí° Utilise /start pour afficher notre menu et passer commande facilement.');
    console.log(`‚ÑπÔ∏è Message d'aide envoy√© √† ${msg.from.username || chatId}`);
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'envoi du message d\'aide:', error);
  }
});

// G√©rer les erreurs de polling
bot.on('polling_error', (error) => {
  console.error('‚ùå Erreur de polling:', error.code, error.message);
});

// Arr√™t propre du bot
process.on('SIGINT', () => {
  console.log('\n‚èπÔ∏è Arr√™t du bot...');
  bot.stopPolling();
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\n‚èπÔ∏è Arr√™t du bot...');
  bot.stopPolling();
  process.exit(0);
});
